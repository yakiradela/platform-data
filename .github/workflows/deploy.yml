name: Deploy & Migrate Only

on:
  workflow_dispatch:  # מאפשר להריץ ידנית מה-GitHub Actions

jobs:
  run-db-migrations:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout rds-app code
        uses: actions/checkout@v3
        with:
          path: rds-app

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install -r rds-app/requirements.txt

      - name: Run DB migrations
        run: ./ci-cd/scripts/db-migrations.sh
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

  deploy:
    runs-on: ubuntu-latest
    needs: run-db-migrations
    steps:
      - name: Checkout k8s manifests
        uses: actions/checkout@v3

      - name: Setup AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install

      - name: Update kubeconfig
        env:
          AWS_REGION: us-east-2
          CLUSTER_NAME: DEV-EKS
        run: |
          aws eks --region $AWS_REGION update-kubeconfig --name $CLUSTER_NAME

      - name: Setup kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Deploy all base kustomizations
        run: |
          kubectl apply -k k8s/base/airflow
          kubectl apply -k k8s/base/app
          kubectl apply -k k8s/base/kafka-app
          kubectl apply -k k8s/base/kafka
          kubectl apply -k k8s/base/monitoring
          kubectl apply -k k8s/base/rds-app
          kubectl apply -k k8s/base/spark-app

      - name: Sync ArgoCD application
        env:
          ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
          ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_AUTH_TOKEN }}
        run: |
          argocd app sync data-platform --grpc-web --server $ARGOCD_SERVER --auth-token $ARGOCD_AUTH_TOKEN

  rollout:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Setup kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Restart rollout for devops-data-platform
        run: |
          kubectl argo rollouts rollout restart rollout/devops-data-platform-rollout
