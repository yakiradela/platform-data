name: Full CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev

jobs:
  build-and-push-airflow:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout airflow code
        uses: actions/checkout@v3
        with:
          path: airflow
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push airflow image
        run: |
          docker build -t yakiradela/airflow:2.9.0 ./airflow
          docker push yakiradela/airflow:2.9.0

  build-and-push-devops-data-platform:
    runs-on: ubuntu-latest
    needs: build-and-push-airflow
    steps:
      - name: Checkout devops-data-platform code
        uses: actions/checkout@v3
        with:
          path: devops-data-platform
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push devops-data-platform image
        run: |
          docker build -t yakiradela/devops-data-platform:latest ./devops-data-platform
          docker push yakiradela/devops-data-platform:latest

  build-and-push-kafka-app:
    runs-on: ubuntu-latest
    needs: build-and-push-devops-data-platform
    steps:
      - name: Checkout kafka-app code
        uses: actions/checkout@v3
        with:
          path: kafka-app
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push kafka-app image
        run: |
          docker build -t yakiradela/devops-data-platform-kafka:v1.0.0 ./kafka-app
          docker push yakiradela/devops-data-platform-kafka:v1.0.0

  build-and-push-spark-app:
    runs-on: ubuntu-latest
    needs: build-and-push-kafka-app
    steps:
      - name: Checkout spark-app code
        uses: actions/checkout@v3
        with:
          path: spark-app
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push spark-app image
        run: |
          docker build -t yakiradela/devops-data-platform-spark:v1.0.0 ./spark-app
          docker push yakiradela/devops-data-platform-spark:v1.0.0

  build-and-push-rds-app:
    runs-on: ubuntu-latest
    needs: build-and-push-spark-app
    steps:
      - name: Checkout rds-app code
        uses: actions/checkout@v3
        with:
          path: rds-app
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push rds-app image
        run: |
          docker build -t yakiradela/devops-data-platform-rds:v1.0.0 ./rds-app
          docker push yakiradela/devops-data-platform-rds:v1.0.0

  run-db-migrations:
    runs-on: ubuntu-latest
    needs: build-and-push-rds-app
    steps:
      - name: Checkout rds-app code
        uses: actions/checkout@v3
        with:
          path: rds-app
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: pip install -r rds-app/requirements.txt
      - name: Run DB migrations
        run: ./ci-cd/scripts/db-migrations.sh
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

  deploy:
    runs-on: ubuntu-latest
    needs: run-db-migrations
    steps:
      - name: Checkout k8s manifests
        uses: actions/checkout@v3
      - name: Setup kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
      - name: Setup Kubeconfig
        env:
          KUBECONFIG_DATA: ${{ secrets.KUBECONFIG }}
        run: echo "$KUBECONFIG_DATA" | base64 --decode > $HOME/.kube/config
      - name: Sync ArgoCD application
        run: |
          argocd app sync data-platform --grpc-web --server ${{ secrets.ARGOCD_SERVER }} --auth-token ${{ secrets.ARGOCD_AUTH_TOKEN }}

  rollout:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Setup kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
      - name: Setup Kubeconfig
        env:
          KUBECONFIG_DATA: ${{ secrets.KUBECONFIG }}
        run: echo "$KUBECONFIG_DATA" | base64 --decode > $HOME/.kube/config
      - name: Apply rollout for devops-data-platform
        run: |
          kubectl argo rollouts rollout restart rollout/devops-data-platform-rollout
