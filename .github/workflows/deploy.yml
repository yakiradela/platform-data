name: Full CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout k8s manifests
        uses: actions/checkout@v3

      - name: Setup kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Setup Kubeconfig
        env:
          KUBECONFIG_DATA: ${{ secrets.KUBECONFIG }}
        run: echo "$KUBECONFIG_DATA" | base64 --decode > $HOME/.kube/config

      - name: Deploy Airflow manifests
        run: |
          kubectl apply -k k8s/base/airflow

      - name: Deploy devops-data-platform manifests
        run: |
          kubectl apply -k k8s/base/app

      - name: Deploy kafka-app manifests
        run: |
          kubectl apply -k k8s/base/kafka-app

      - name: Deploy rds-app manifests
        run: |
          kubectl apply -k k8s/base/rds-app

      - name: Deploy spark-app manifests
        run: |
          kubectl apply -k k8s/base/spark-app

      - name: Deploy Kafka StatefulSet and service
        run: |
          kubectl apply -f k8s/base/kafka/StatefulSet.yaml
          kubectl apply -f k8s/base/kafka/service.yaml

      - name: Deploy observability manifests (Grafana dashboards, Prometheus rules)
        run: |
          kubectl apply -f observability/prometheus-rules/sloa-alerts.yaml
          kubectl apply -f observability/otel-collector.yaml

      - name: Deploy monitoring configmap (Prometheus config)
        run: |
          kubectl apply -k k8s/base/monitoring

      - name: Sync ArgoCD application
        run: |
          argocd app sync data-platform --grpc-web --server ${{ secrets.ARGOCD_SERVER }} --auth-token ${{ secrets.ARGOCD_AUTH_TOKEN }}

  rollout:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Setup kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Setup Kubeconfig
        env:
          KUBECONFIG_DATA: ${{ secrets.KUBECONFIG }}
        run: echo "$KUBECONFIG_DATA" | base64 --decode > $HOME/.kube/config

      - name: Restart rollout for devops-data-platform
        run: |
          kubectl argo rollouts rollout restart rollout/devops-data-platform-rollout
